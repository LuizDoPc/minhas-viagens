{"version":3,"sources":["components/SideDrawer/DrawerToggleButton.js","components/Toolbar/Toolbar.js","components/SideDrawer/SideDrawer.js","components/Backdrop/Backdrop.js","components/MapContainer/MapContainer.js","App.js","registerServiceWorker.js","index.js"],"names":["drawerToggleButton","props","react_default","a","createElement","className","onClick","click","toolbar","SideDrawer_DrawerToggleButton","drawerClickHandler","href","setModalVisible","sideDrawer","drawerClasses","show","backdrop","Wrap","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","selectedPlace","activeMarker","showingInfoWindow","cities","cityName","resultList","newMarkers","onMarkerClick","marker","e","setState","onMapClicked","onCloseModal","handleSubmit","preventDefault","geoCoding","then","res","results","addMarker","cidade","push","name","address_components","long_name","lat","geometry","location","lng","firebase","database","ref","child","set","Nome","inherits","createClass","key","value","_this2","once","snapshot","val","forEach","status","_this3","item","Card_default","CardContent_default","Typography_default","variant","component","formatted_address","color","CardActions_default","Button_default","size","markers","dist","position","google","zoom","initialCenter","visible","index_es","open","modalVisible","onClose","bind","center","onSubmit","onChange","target","type","Component","GoogleApiWrapper","apiKey","App","sideDrawerOpen","drawerToggleClickHandler","prevState","backdropClickHandler","apps","initializeApp","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","city","Promise","_ref","asyncToGenerator","regenerator_default","mark","_callee","resolve","reject","geocode","wrap","_context","prev","next","fetch","sent","json","stop","_x2","_x3","Backdrop_Backdrop","style","height","Toolbar_Toolbar","SideDrawer_SideDrawer","marginTop","MapContainer","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9933f7c4.chunk.js","sourcesContent":["import React from 'react';\n\nimport './DrawerToggleButton.css';\n\nconst drawerToggleButton = props => (\n    <button className=\"toggle-button\" onClick={props.click}>\n        <div className=\"toggle-button__line\" />\n        <div className=\"toggle-button__line\" />\n        <div className=\"toggle-button__line\" />\n    </button>\n);\n\nexport default drawerToggleButton;","import React from \"react\";\n\nimport DrawerToggleButton from \"../SideDrawer/DrawerToggleButton\";\nimport \"./Toolbar.css\";\n\nconst toolbar = props => (\n  <header className=\"toolbar\">\n    <nav className=\"toolbar__navigation\">\n      <div className=\"toolbar__toggle-button\">\n        <DrawerToggleButton click={props.drawerClickHandler} />\n      </div>\n      <div className=\"toolbar__logo\">\n        <a href=\"/\">Minhas Viagens</a>\n      </div>\n      <div className=\"spacer\" />\n      <div className=\"toolbar_navigation-items\">\n        <ul>\n          <li>\n            <a href=\"#\" onClick={() => props.setModalVisible(true)}>\n              Adicionar nova cidade\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  </header>\n);\n\nexport default toolbar;\n","import React from \"react\";\n\nimport \"./SideDrawer.css\";\n\nconst sideDrawer = props => {\n  let drawerClasses = \"side-drawer\";\n  if (props.show) {\n    drawerClasses = \"side-drawer open\";\n  }\n  return (\n    <nav className={drawerClasses}>\n      <ul>\n        <li>\n          <a href=\"/\">Adicionar nova cidade</a>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default sideDrawer;\n","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = props => (\n    <div className=\"backdrop\" onClick={props.click} />\n);\n\nexport default backdrop;","import React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\n\nimport firebase from \"firebase\";\n\nimport Modal from \"react-responsive-modal\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport class Wrap extends Component {\n  state = {\n    selectedPlace: \"\",\n    activeMarker: {},\n    showingInfoWindow: false,\n    cities: [],\n    cityName: \"\",\n    resultList: [],\n    newMarkers: []\n  };\n\n  componentWillMount() {\n    firebase\n      .database()\n      .ref(\"/Cidades\")\n      .once(\"value\")\n      .then(snapshot => {\n        let cities = [];\n        snapshot.val().forEach(cidade => {\n          this.props.geoCoding(cidade.Nome).then(res => {\n            if (res.status === \"OK\") {\n              cities.push({\n                name: cidade.Nome,\n                lat: res.results[0].geometry.location.lat,\n                lng: res.results[0].geometry.location.lng\n              });\n            }\n            this.setState({ cities });\n          });\n        });\n      });\n  }\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  };\n\n  onMapClicked = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  onCloseModal = () => {\n    this.props.setModalVisible(false);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.geoCoding(this.state.cityName).then(res => {\n      this.setState({ resultList: res.results });\n    });\n  };\n\n  addMarker = cidade => {\n    this.state.cities.push({\n      name: cidade.address_components[0].long_name,\n      lat: cidade.geometry.location.lat,\n      lng: cidade.geometry.location.lng\n    });\n    this.props.setModalVisible(false);\n    firebase\n      .database()\n      .ref(\"/Cidades\")\n      .child(`${this.state.cities.length + 1}`)\n      .set({ Nome: cidade.address_components[0].long_name });\n  };\n\n  render() {\n    const resultList = [];\n\n    this.state.resultList.forEach(item => {\n      resultList.push(\n        <Card key={item}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">\n              {item.formatted_address}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              Latitude: {item.geometry.location.lat}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              Longitude: {item.geometry.location.lng}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button size=\"small\" onClick={() => this.addMarker(item)}>\n              Escolher\n            </Button>\n          </CardActions>\n        </Card>\n      );\n    });\n\n    const markers = [];\n    this.state.cities.forEach(cidade => {\n      markers.push(\n        <Marker\n          key={cidade.lat + cidade.lng + cidade.name}\n          onClick={this.onMarkerClick}\n          name={cidade.name}\n          position={{\n            lat: cidade.lat,\n            lng: cidade.lng\n          }}\n        />\n      );\n    });\n\n    return (\n      <div>\n        <Map\n          google={this.props.google}\n          onClick={this.onMapClicked}\n          zoom={4.45}\n          initialCenter={{\n            lat: -14.5401117,\n            lng: -45.1187843\n          }}\n        >\n          {markers}\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n          >\n            <div>\n              <h1>{this.state.selectedPlace.name}</h1>\n            </div>\n          </InfoWindow>\n        </Map>\n        <Modal\n          open={this.props.modalVisible}\n          onClose={this.onCloseModal.bind(this)}\n          center\n        >\n          <h2>Adicionar nova Cidade</h2>\n\n          <form onSubmit={this.handleSubmit}>\n            <label>Nome da cidade: </label>\n            <input\n              value={this.state.cityName}\n              onChange={e => {\n                this.setState({ cityName: e.target.value });\n              }}\n            />\n            <input type=\"submit\" value=\"Enviar\" />\n\n            <div>{resultList}</div>\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAxt-VCR6Hc3dCH8yt6hVpQwIub-vqQBMU\"\n})(Wrap);\n","import React, { Component } from \"react\";\n\nimport Toolbar from \"./components/Toolbar/Toolbar\";\nimport SideDrawer from \"./components/SideDrawer/SideDrawer\";\nimport Backdrop from \"./components/Backdrop/Backdrop\";\nimport MapContainer from \"./components/MapContainer/MapContainer\";\n\nimport firebase from \"@firebase/app\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    var config = {\n      apiKey: \"AIzaSyCevUPMzUXYl9S63Zm6Wexy6CM0KSvgqp4\",\n      authDomain: \"appdaana-89bcc.firebaseapp.com\",\n      databaseURL: \"https://appdaana-89bcc.firebaseio.com\",\n      projectId: \"appdaana-89bcc\",\n      storageBucket: \"appdaana-89bcc.appspot.com\",\n      messagingSenderId: \"97719053670\"\n    };\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n  }\n\n  state = {\n    sideDrawerOpen: false,\n    modalVisible: false\n  };\n\n  async geoCoding(city) {\n    return new Promise(async (resolve, reject) => {\n      let geocode = await fetch(\n        `https://maps.googleapis.com/maps/api/geocode/json?address=${city}&key=AIzaSyAxt-VCR6Hc3dCH8yt6hVpQwIub-vqQBMU`\n      );\n      geocode = geocode.json();\n      resolve(geocode);\n    });\n  }\n\n  drawerToggleClickHandler = () => {\n    this.setState(prevState => {\n      return { sideDrawerOpen: !prevState.sideDrawerOpen };\n    });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({ sideDrawerOpen: false });\n  };\n\n  setModalVisible(val) {\n    this.setState({ modalVisible: val });\n  }\n\n  render() {\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropClickHandler} />;\n    }\n\n    return (\n      <div style={{ height: \"100%\" }}>\n        <Toolbar\n          drawerClickHandler={this.drawerToggleClickHandler}\n          setModalVisible={this.setModalVisible.bind(this)}\n        />\n        <SideDrawer show={this.state.sideDrawerOpen} />\n        {backdrop}\n        <main style={{ marginTop: \"64px\" }}>\n          <MapContainer\n            geoCoding={this.geoCoding.bind(this)}\n            setModalVisible={this.setModalVisible.bind(this)}\n            modalVisible={this.state.modalVisible}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}